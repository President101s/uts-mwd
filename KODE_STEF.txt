<<<<<<< development
@app.route("/update_cust", methods=["POST"])
def update_cust():
    cust_id = request.form.get("cust_id")

    newname = request.form.get("newname")

    newaddress = request.form.get("newaddress")

    newphone = request.form.get("newphone")

    customer = Customer.query.filter_by(cust_id=cust_id).first()
    customer.name = newname
    customer.address = newaddress
    customer.phone = newphone
    db.session.commit()


    return redirect(url_for('manager_cust'))


@app.route("/delete_cust", methods=["POST"])
def delete_cust():
    cust_id = request.form.get("cust_id")
    customer = Customer.query.filter_by(cust_id=cust_id).first()
    db.session.delete(customer)
    db.session.commit()
    return redirect(url_for('manager_cust'))

def isValidPhoneNumber(phone_number:str):
    return True if phone_number not in string.ascii_letters and len(phone_number) == 12 else False
            
@app.route('/add_customer', methods=['GET', 'POST'])
def add_customer():
    if request.method == 'POST':
        cust_name = request.form.get('cust_name')
        cust_address = request.form.get('cust_add')
        cust_phone = request.form.get('phone_add')
        if isValidPhoneNumber(cust_phone):
            cust = Customer(cust_name,cust_address,cust_phone)
            db.session.add(cust)
            db.session.commit()
        else:
            print('Phone Number Tidak Valid!')
        
    return render_template('manager_cust.html')
>>>>>>> development